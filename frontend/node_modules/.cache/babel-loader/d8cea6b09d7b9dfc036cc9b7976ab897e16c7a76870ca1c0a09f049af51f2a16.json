{"ast":null,"code":"var _jsxFileName = \"/Users/borislav26/GolandProjects/planted/frontend/src/component/Diagram.js\",\n  _s = $RefreshSig$();\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport VennModule from \"highcharts/modules/venn.js\";\nimport { useEffect, useState } from 'react';\nimport { fetchOverlapBetweenGroups, fetchTotalOverlap } from '../logic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nVennModule(Highcharts);\nconst Diagram = () => {\n  _s();\n  let vennOptions = {\n    title: {\n      text: 'Total Overlap Between Groups'\n    },\n    chart: {\n      backgroundColor: \"#5a1541CC\",\n      borderWidth: 2,\n      borderColor: \"#fff\",\n      borderRadius: 20,\n      className: \"\",\n      animation: false\n    },\n    series: [{\n      type: 'venn',\n      name: 'Overlap Between Groups',\n      data: [{\n        sets: ['Seeds'],\n        value: 10000\n      }, {\n        sets: ['FruitStars'],\n        value: 10000\n      }, {\n        sets: ['Peapolis'],\n        value: 10000\n      }\n      //     {\n      //     sets: ['Seeds', 'Fruit Stars'],\n      //     value: 12,\n      //     name: 'Slow Hi'\n      // }, {\n      //     sets: ['Seeds', 'Peapolis'],\n      //     value: 13,\n      //     name: 'Slow'\n      // }, {\n      //     sets: ['Fruit Stars', 'Peapolis'],\n      //     value: 10,\n      //     name: 'Not the best'\n      // }, {\n      //     sets: ['Seeds', 'Fruit Stars', 'Peapolis'],\n      //     value: 15,\n      //     name: 'She is daydreaming'\n      // }\n      ]\n    }]\n  };\n\n  const [vennOptionsState, setVennOptionsState] = useState({});\n  const fetchData = async () => {\n    const data = await fetchOverlapBetweenGroups();\n    return data;\n  };\n  const fetchTotalOverlapsData = async () => {\n    const data = await fetchTotalOverlap();\n    return data;\n  };\n  const setDiagramData = async () => {\n    const overlapBetweenGroupsData = await fetchData();\n    const totalOverlapData = await fetchTotalOverlapsData();\n    overlapBetweenGroupsData.forEach(elem => {\n      const groups = elem.name.split(\"->\");\n      vennOptions.series[0].data = [...vennOptions.series[0].data, {\n        sets: groups,\n        value: elem.numberOfUsers,\n        name: elem.name\n      }];\n    });\n    vennOptions.series[0].data = [...vennOptions.series[0].data, {\n      sets: ['Seeds', 'FruitStars', 'Peapolis'],\n      value: 200,\n      name: 'Total Overlap'\n    }];\n    setVennOptionsState(vennOptions);\n  };\n  useEffect(() => {\n    setDiagramData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: vennOptionsState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(Diagram, \"l8p8H3JDazcknOVUyrx7I8hpwXY=\");\n_c = Diagram;\nexport default Diagram;\nvar _c;\n$RefreshReg$(_c, \"Diagram\");","map":{"version":3,"names":["HighchartsReact","Highcharts","VennModule","useEffect","useState","fetchOverlapBetweenGroups","fetchTotalOverlap","Diagram","vennOptions","title","text","chart","backgroundColor","borderWidth","borderColor","borderRadius","className","animation","series","type","name","data","sets","value","vennOptionsState","setVennOptionsState","fetchData","fetchTotalOverlapsData","setDiagramData","overlapBetweenGroupsData","totalOverlapData","forEach","elem","groups","split","numberOfUsers"],"sources":["/Users/borislav26/GolandProjects/planted/frontend/src/component/Diagram.js"],"sourcesContent":["import HighchartsReact from 'highcharts-react-official'\nimport Highcharts from 'highcharts'\nimport VennModule from \"highcharts/modules/venn.js\"\nimport {useEffect, useState} from 'react'\nimport {fetchOverlapBetweenGroups, fetchTotalOverlap} from '../logic'\nVennModule(Highcharts)\n\nconst Diagram = () => {\n    let vennOptions = {\n        title: {\n            text: 'Total Overlap Between Groups'\n        },\n        chart: {\n            backgroundColor: \"#5a1541CC\",\n            borderWidth: 2,\n            borderColor: \"#fff\",\n            borderRadius: 20,\n            className : \"\",\n            animation: false,\n        },\n        series: [{\n            type: 'venn',\n            name: 'Overlap Between Groups',\n            data: [{\n                sets: ['Seeds'],\n                value: 10000\n            }, {\n                sets: ['FruitStars'],\n                value: 10000\n            }, {\n                sets: ['Peapolis'],\n                value: 10000\n            },\n                //     {\n                //     sets: ['Seeds', 'Fruit Stars'],\n                //     value: 12,\n                //     name: 'Slow Hi'\n                // }, {\n                //     sets: ['Seeds', 'Peapolis'],\n                //     value: 13,\n                //     name: 'Slow'\n                // }, {\n                //     sets: ['Fruit Stars', 'Peapolis'],\n                //     value: 10,\n                //     name: 'Not the best'\n                // }, {\n                //     sets: ['Seeds', 'Fruit Stars', 'Peapolis'],\n                //     value: 15,\n                //     name: 'She is daydreaming'\n                // }\n            ]\n        }]\n    }\n\n    const [vennOptionsState, setVennOptionsState] = useState({})\n\n    const fetchData = async () => {\n        const data = await fetchOverlapBetweenGroups()\n        return data\n    }\n\n    const fetchTotalOverlapsData = async () => {\n        const data = await fetchTotalOverlap()\n        return data\n    }\n\n    const setDiagramData = async () => {\n        const overlapBetweenGroupsData = await fetchData()\n        const totalOverlapData = await fetchTotalOverlapsData()\n\n        overlapBetweenGroupsData.forEach((elem) => {\n            const groups = elem.name.split(\"->\")\n            vennOptions.series[0].data = [...vennOptions.series[0].data, {sets: groups, value: elem.numberOfUsers, name: elem.name}]\n        })\n\n        vennOptions.series[0].data = [...vennOptions.series[0].data, {sets: ['Seeds', 'FruitStars', 'Peapolis'], value: 200, name: 'Total Overlap'}]\n        setVennOptionsState(vennOptions)\n\n    }\n\n    useEffect(() => {\n        setDiagramData()\n    }, [])\n\n\n\n\n\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={vennOptionsState}\n        />\n    )\n}\n\nexport default Diagram"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}