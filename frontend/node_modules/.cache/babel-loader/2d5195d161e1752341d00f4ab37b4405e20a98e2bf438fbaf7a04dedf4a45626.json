{"ast":null,"code":"var _jsxFileName = \"/Users/borislav26/GolandProjects/planted/frontend/src/component/Diagram.js\",\n  _s = $RefreshSig$();\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport VennModule from \"highcharts/modules/venn.js\";\nimport { useEffect, useState } from 'react';\nimport { fetchOverlapBetweenGroups } from '../logic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nVennModule(Highcharts);\nconst Diagram = () => {\n  _s();\n  let vennOptions = {\n    title: {\n      text: 'Total Overlap Between Groups'\n    },\n    chart: {\n      backgroundColor: \"#5a1541CC\",\n      borderWidth: 2,\n      borderColor: \"#fff\",\n      borderRadius: 20,\n      className: \"\",\n      animation: false\n    },\n    series: [{\n      type: 'venn',\n      name: 'Decline Reasons',\n      data: [{\n        sets: ['Seeds'],\n        value: 10000\n      }, {\n        sets: ['FruitStars'],\n        value: 10000\n      }, {\n        sets: ['Peapolis'],\n        value: 10000\n      }\n      //     {\n      //     sets: ['Seeds', 'Fruit Stars'],\n      //     value: 12,\n      //     name: 'Slow Hi'\n      // }, {\n      //     sets: ['Seeds', 'Peapolis'],\n      //     value: 13,\n      //     name: 'Slow'\n      // }, {\n      //     sets: ['Fruit Stars', 'Peapolis'],\n      //     value: 10,\n      //     name: 'Not the best'\n      // }, {\n      //     sets: ['Seeds', 'Fruit Stars', 'Peapolis'],\n      //     value: 15,\n      //     name: 'She is daydreaming'\n      // }\n      ]\n    }]\n  };\n\n  const [vennOptionsState, setVennOptionsState] = useState({});\n  const fetchData = async () => {\n    const data = await fetchOverlapBetweenGroups();\n    return data;\n  };\n  useEffect(() => {\n    fetchData().then(res => {\n      if (res) {\n        res.forEach(elem => {\n          const groups = elem.name.split(\"->\");\n          vennOptions.series[0].data = [...vennOptions.series[0].data, {\n            sets: groups,\n            value: elem.numberOfUsers,\n            name: elem.name\n          }];\n        });\n        vennOptions.series[0].data = [...vennOptions.series[0].data, {\n          sets: ['Seeds', 'FruitStars', 'Peapolis'],\n          value: 200,\n          name: 'name'\n        }];\n        setVennOptionsState(vennOptions);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: vennOptionsState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Diagram, \"l8p8H3JDazcknOVUyrx7I8hpwXY=\");\n_c = Diagram;\nexport default Diagram;\nvar _c;\n$RefreshReg$(_c, \"Diagram\");","map":{"version":3,"names":["HighchartsReact","Highcharts","VennModule","useEffect","useState","fetchOverlapBetweenGroups","Diagram","vennOptions","title","text","chart","backgroundColor","borderWidth","borderColor","borderRadius","className","animation","series","type","name","data","sets","value","vennOptionsState","setVennOptionsState","fetchData","then","res","forEach","elem","groups","split","numberOfUsers"],"sources":["/Users/borislav26/GolandProjects/planted/frontend/src/component/Diagram.js"],"sourcesContent":["import HighchartsReact from 'highcharts-react-official'\nimport Highcharts from 'highcharts'\nimport VennModule from \"highcharts/modules/venn.js\"\nimport {useEffect, useState} from 'react'\nimport {fetchOverlapBetweenGroups} from '../logic'\nVennModule(Highcharts)\n\nconst Diagram = () => {\n    let vennOptions = {\n        title: {\n            text: 'Total Overlap Between Groups'\n        },\n        chart: {\n            backgroundColor: \"#5a1541CC\",\n            borderWidth: 2,\n            borderColor: \"#fff\",\n            borderRadius: 20,\n            className : \"\",\n            animation: false,\n        },\n        series: [{\n            type: 'venn',\n            name: 'Decline Reasons',\n            data: [{\n                sets: ['Seeds'],\n                value: 10000\n            }, {\n                sets: ['FruitStars'],\n                value: 10000\n            }, {\n                sets: ['Peapolis'],\n                value: 10000\n            },\n                //     {\n                //     sets: ['Seeds', 'Fruit Stars'],\n                //     value: 12,\n                //     name: 'Slow Hi'\n                // }, {\n                //     sets: ['Seeds', 'Peapolis'],\n                //     value: 13,\n                //     name: 'Slow'\n                // }, {\n                //     sets: ['Fruit Stars', 'Peapolis'],\n                //     value: 10,\n                //     name: 'Not the best'\n                // }, {\n                //     sets: ['Seeds', 'Fruit Stars', 'Peapolis'],\n                //     value: 15,\n                //     name: 'She is daydreaming'\n                // }\n            ]\n        }]\n    }\n\n    const [vennOptionsState, setVennOptionsState] = useState({})\n\n    const fetchData = async () => {\n        const data =  await fetchOverlapBetweenGroups()\n        return data\n    }\n\n    useEffect(() => {\n       fetchData().then((res) => {\n           if (res) {\n               \n               res.forEach((elem) => {\n                   const groups = elem.name.split(\"->\")\n                   vennOptions.series[0].data = [...vennOptions.series[0].data, {sets: groups, value: elem.numberOfUsers, name: elem.name}]\n               })\n\n               vennOptions.series[0].data = [...vennOptions.series[0].data, {sets: ['Seeds', 'FruitStars', 'Peapolis'], value: 200, name: 'name'}]\n               setVennOptionsState(vennOptions)\n           }\n       })\n\n    }, [])\n\n\n\n\n\n    return (\n        <HighchartsReact\n            highcharts={Highcharts}\n            options={vennOptionsState}\n        />\n    )\n}\n\nexport default Diagram"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,2BAA2B;AACvD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,yBAAyB,QAAO,UAAU;AAAA;AAClDH,UAAU,CAACD,UAAU,CAAC;AAEtB,MAAMK,OAAO,GAAG,MAAM;EAAA;EAClB,IAAIC,WAAW,GAAG;IACdC,KAAK,EAAE;MACHC,IAAI,EAAE;IACV,CAAC;IACDC,KAAK,EAAE;MACHC,eAAe,EAAE,WAAW;MAC5BC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,MAAM;MACnBC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAG,EAAE;MACdC,SAAS,EAAE;IACf,CAAC;IACDC,MAAM,EAAE,CAAC;MACLC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE,iBAAiB;MACvBC,IAAI,EAAE,CAAC;QACHC,IAAI,EAAE,CAAC,OAAO,CAAC;QACfC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,IAAI,EAAE,CAAC,YAAY,CAAC;QACpBC,KAAK,EAAE;MACX,CAAC,EAAE;QACCD,IAAI,EAAE,CAAC,UAAU,CAAC;QAClBC,KAAK,EAAE;MACX;MACI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAA;IAER,CAAC;EACL,CAAC;;EAED,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAMqB,SAAS,GAAG,YAAY;IAC1B,MAAML,IAAI,GAAI,MAAMf,yBAAyB,EAAE;IAC/C,OAAOe,IAAI;EACf,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACbsB,SAAS,EAAE,CAACC,IAAI,CAAEC,GAAG,IAAK;MACtB,IAAIA,GAAG,EAAE;QAELA,GAAG,CAACC,OAAO,CAAEC,IAAI,IAAK;UAClB,MAAMC,MAAM,GAAGD,IAAI,CAACV,IAAI,CAACY,KAAK,CAAC,IAAI,CAAC;UACpCxB,WAAW,CAACU,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,GAAG,CAAC,GAAGb,WAAW,CAACU,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE;YAACC,IAAI,EAAES,MAAM;YAAER,KAAK,EAAEO,IAAI,CAACG,aAAa;YAAEb,IAAI,EAAEU,IAAI,CAACV;UAAI,CAAC,CAAC;QAC5H,CAAC,CAAC;QAEFZ,WAAW,CAACU,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,GAAG,CAAC,GAAGb,WAAW,CAACU,MAAM,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE;UAACC,IAAI,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,CAAC;UAAEC,KAAK,EAAE,GAAG;UAAEH,IAAI,EAAE;QAAM,CAAC,CAAC;QACnIK,mBAAmB,CAACjB,WAAW,CAAC;MACpC;IACJ,CAAC,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAMN,oBACI,QAAC,eAAe;IACZ,UAAU,EAAEN,UAAW;IACvB,OAAO,EAAEsB;EAAiB;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEV,CAAC;AAAA,GAhFKjB,OAAO;AAAA,KAAPA,OAAO;AAkFb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}